-- JOINS

-- 1. TRAGA EM UMA CONSULTA TODOS OS CLIENTES E OS ENDEREÇOS QUE ELES POSSUEM
SELECT 	TB_CLIENTE.DS_NOME, 
		TB_CLIENTE_ENDERECO.* 
FROM 	TB_CLIENTE 
		LEFT JOIN TB_CLIENTE_ENDERECO 
			   ON TB_CLIENTE.ID_CLIENTE = TB_CLIENTE_ENDERECO.ID_CLIENTE_ENDERECO;
        
-- 2. TRAGA OS 5 PRIMEIROS PRODUTOS CADASTRADOS COM O NOME DE SEUS FORNECEDORES
SELECT 	TB_PRODUTO.DS_NOME AS PRODUTO, 
		TB_FORNECEDOR.DS_NOME AS FORNECEDOR 
FROM 	TB_PRODUTO 
		LEFT JOIN TB_FORNECEDOR
			   ON TB_PRODUTO.ID_FORNECEDOR = TB_FORNECEDOR.ID_FORNECEDOR 
LIMIT 	5;

-- 3. TRAGA TODOS OS FORNECEDORES QUE POSSUEM A CATEGORIA COMO A (Sem usar o ID_FORNECEDOR_CATEGORIA no WHERE)
SELECT 	* 
FROM 	TB_FORNECEDOR 
		INNER JOIN TB_FORNECEDOR_CATEGORIA 
				ON TB_FORNECEDOR.ID_FORNECEDOR_CATEGORIA = TB_FORNECEDOR_CATEGORIA.ID_FORNECEDOR_CATEGORIA
WHERE 	TB_FORNECEDOR_CATEGORIA.DS_NOME = "A";
    
-- 4. TRAGA OS 3 PRIMEIROS PEDIDOS CADASTRADOS E O NOME DE SEUS RESPECTIVOS PRODUTOS
SELECT 	*
-- FROM (SELECT * FROM TB_PEDIDO LIMIT 3) AS TB_PEDIDO
FROM 	(SELECT * FROM TB_PEDIDO LIMIT 3) AS PEDIDO
		INNER JOIN TB_PEDIDO_DETALHE
				ON PEDIDO.ID_PEDIDO = TB_PEDIDO_DETALHE.ID_PEDIDO_DETALHE
		INNER JOIN TB_PRODUTO
				ON TB_PEDIDO_DETALHE.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO;
        
--             5. TRAZER OS NOMES DE TODOS OS PRODUTOS COMPRADOS POR CLIENTE
SELECT 	TB_PRODUTO.DS_NOME 
FROM 	TB_PRODUTO
		INNER JOIN TB_PEDIDO_DETALHE
				ON TB_PRODUTO.ID_PRODUTO = TB_PEDIDO_DETALHE.ID_PEDIDO;



-- GROUP BY

-- 1 TRAZER A QUANTIDADE DE PRODUTOS OFERECIDAS POR CADA FORNECEDOR
SELECT 	TB_PRODUTO.DS_NOME, 
		SUM(TB_PRODUTO.NR_QUANTIDADE_ESTOQUE) AS QUANTIDADE_TOTAL 
FROM 	TB_FORNECEDOR
		LEFT JOIN TB_PRODUTO
			   ON TB_FORNECEDOR.ID_FORNECEDOR = TB_PRODUTO.ID_FORNECEDOR
GROUP 	BY TB_PRODUTO.DS_NOME;

-- 1.2 MOSTRAR OS 3 FORNECEDORES QUE MAIS TEM PRODUTOS
SELECT	TB_FORNECEDOR.DS_NOME, 
		SUM(TB_PRODUTO.NR_QUANTIDADE_ESTOQUE) AS QUANTIDADE_TOTAL 
FROM 	TB_FORNECEDOR
		LEFT JOIN TB_PRODUTO
			   ON TB_FORNECEDOR.ID_FORNECEDOR = TB_PRODUTO.ID_FORNECEDOR
GROUP 	BY TB_FORNECEDOR.DS_NOME
ORDER 	BY QUANTIDADE_TOTAL DESC
LIMIT 	3;

-- 2.1 TRAZER TODOS OS PRODUTOS E A QUANTIDADE TOTAL DE ITENS PEDIDOS.
SELECT 	TB_PRODUTO.DS_NOME, 
		SUM(TB_PEDIDO_DETALHE.NR_QUANTIDADE) AS QUANTIDADE_TOTAL 
FROM 	TB_PRODUTO
		LEFT JOIN TB_PEDIDO_DETALHE
			   ON TB_PRODUTO.ID_PRODUTO = TB_PEDIDO_DETALHE.ID_PRODUTO
GROUP 	BY TB_PRODUTO.DS_NOME;

-- 2.2 TRAZER A MÉDIA DA QUANTIDADE PEDIDA DE CADA PRODUTO.
SELECT	TB_PRODUTO.DS_NOME, 
		AVG(TB_PEDIDO_DETALHE.NR_QUANTIDADE) AS QUANTIDADE_MEDIA 
FROM 	TB_PRODUTO
		LEFT JOIN TB_PEDIDO_DETALHE
			   ON TB_PRODUTO.ID_PRODUTO = TB_PEDIDO_DETALHE.ID_PRODUTO
GROUP 	BY TB_PRODUTO.DS_NOME;

-- 2.3 TRAZER NA PESQUISA DE MÉDIA APENAS PRODUTOS QUE TENHAM MAIS DE UM PEDIDO
SELECT 	TB_PRODUTO.DS_NOME, 
		AVG(TB_PEDIDO_DETALHE.NR_QUANTIDADE) AS QUANTIDADE_MEDIA 
FROM 	TB_PRODUTO
		LEFT JOIN TB_PEDIDO_DETALHE
			   ON TB_PRODUTO.ID_PRODUTO = TB_PEDIDO_DETALHE.ID_PRODUTO
GROUP 	BY TB_PRODUTO.DS_NOME
HAVING 	COUNT(TB_PEDIDO_DETALHE.ID_PEDIDO_DETALHE) > 1;
    
-- 3.4 ORDERNAR PELA MAIOR MEDIA ATÉ A MENOR
SELECT 	TB_PRODUTO.DS_NOME, 
		AVG(TB_PEDIDO_DETALHE.NR_QUANTIDADE) AS QUANTIDADE_MEDIA 
FROM 	TB_PRODUTO
		LEFT JOIN TB_PEDIDO_DETALHE
			   ON TB_PRODUTO.ID_PRODUTO = TB_PEDIDO_DETALHE.ID_PRODUTO
GROUP 	BY TB_PRODUTO.DS_NOME
HAVING 	COUNT(TB_PEDIDO_DETALHE.ID_PEDIDO_DETALHE) > 1
ORDER 	BY QUANTIDADE_MEDIA DESC;

-- 4   TRAZER O VALOR TOTAL DE TODOS OS PEDIDOS. 
SELECT 	TB_PEDIDO.*, 
		SUM(TB_PEDIDO_DETALHE.VL_PRECO) AS VALOR_TOTAL 
FROM 	TB_PEDIDO
		INNER JOIN TB_PEDIDO_DETALHE
				ON TB_PEDIDO.ID_PEDIDO = TB_PEDIDO_DETALHE.ID_PEDIDO
GROUP 	BY TB_PEDIDO.ID_PEDIDO;
-- 5   TRAZER OS 5 CLIENTES QUE MAIS GASTARAM NO ECOMMERCE
SELECT 	TB_CLIENTE.DS_NOME, 
		SUM(TB_PEDIDO_DETALHE.VL_PRECO) AS VALOR_TOTAL
FROM 	TB_CLIENTE
		INNER JOIN TB_PEDIDO
				ON TB_CLIENTE.ID_CLIENTE = TB_PEDIDO.ID_CLIENTE
		INNER JOIN TB_PEDIDO_DETALHE
				ON TB_PEDIDO.ID_PEDIDO = TB_PEDIDO_DETALHE.ID_PEDIDO
GROUP 	BY TB_CLIENTE.DS_NOME
ORDER 	BY VALOR_TOTAL DESC
LIMIT 	5;